// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebApi.POC.Repository;

namespace WebApi.POC.Migrations
{
    [DbContext(typeof(PocDbContext))]
    [Migration("20180403002631_V0")]
    partial class V0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("WebApi.POC.Domain.CryptoKey", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("KindId");

                    b.Property<string>("Value");

                    b.HasKey("Id", "KindId");

                    b.HasIndex("KindId");

                    b.ToTable("crypto_keys");
                });

            modelBuilder.Entity("WebApi.POC.Domain.KeyKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("key_kind");
                });

            modelBuilder.Entity("WebApi.Shared.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("WebApi.Shared.Domain.ServiceDemand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<bool>("IsPrivate");

                    b.Property<DateTime>("LastEdit");

                    b.Property<int>("OwnerId");

                    b.Property<string>("PicturePath");

                    b.Property<int?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StatusId");

                    b.ToTable("demands");
                });

            modelBuilder.Entity("WebApi.Shared.Domain.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("status");
                });

            modelBuilder.Entity("WebApi.Shared.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("WebApi.POC.Domain.CryptoKey", b =>
                {
                    b.HasOne("WebApi.POC.Domain.KeyKind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Shared.Domain.ServiceDemand", b =>
                {
                    b.HasOne("WebApi.Shared.Domain.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApi.Shared.Domain.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("WebApi.Shared.Domain.User", b =>
                {
                    b.HasOne("WebApi.Shared.Domain.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
